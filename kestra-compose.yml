version: "3.8"

volumes:
  kestra-data:
    driver: local
  kestra-postgres-data:
    driver: local

networks:
  internal:
    driver: bridge
  my-network:
    external: true  # Подключаемся к общей сети

services:
  kestra-postgres:
    image: postgres
    container_name: kestra-postgres
    volumes:
      - kestra-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
    networks:
      - internal  # Только для внутреннего использования Kestra

  kestra:
    image: kestra/kestra:latest
    container_name: kestra
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          # Локальная база данных для хранения метаданных Kestra
          postgres:
            url: jdbc:postgresql://kestra-postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
          # Подключение к внешней базе данных (postgres-db)
          external:
            url: jdbc:postgresql://postgres-db:5432/postgres-zoomcamp
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            url: http://localhost:8080/
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      kestra-postgres:
        condition: service_healthy
    networks:
      - internal
      - my-network  # Подключаем Kestra к общей сети
